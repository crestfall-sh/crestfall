
# https://www.beekeeperstudio.io/
# https://hoppscotch.io/
# https://docs.docker.com/compose/reference/
# https://docs.docker.com/engine/install/ubuntu/
# https://docs.docker.com/compose/compose-file/build/
# https://docs.docker.com/compose/compose-file/compose-versioning/

# sudo rm -rf ./volumes/
# sudo docker compose up
# sudo docker compose up --detach
# sudo docker compose down

version: '3.8'

services:

  # https://hub.docker.com/_/postgres
  # https://github.com/docker-library/docs/blob/master/postgres/README.md
  # https://github.com/supabase/supabase/blob/master/docker/docker-compose.yml
  # https://github.com/supabase/supabase/tree/master/docker/volumes/db/init
  # https://github.com/supabase/postgres/tree/develop/ansible/tasks/postgres-extensions
  # https://github.com/subzerocloud/postgrest-starter-kit/blob/master/docker-compose.yml
  # https://gist.github.com/leopoldodonnell/b0b7e06943bd389560184d948bdc2d5b
  postgresql:
    build:
      context: .
      dockerfile: ./postgresql/Dockerfile
    restart: "no"
    ports:
      - 5432:5432
    command: postgres -c shared_preload_libraries=pg_cron,pgsodium,pgaudit
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER:?error} # postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error} # postgres
    volumes:
      - ./postgresql/init:/docker-entrypoint-initdb.d
      - ./volumes/postgresql/data:/var/lib/postgresql/data

  # https://hub.docker.com/r/postgrest/postgrest/
  # https://www.postgresql.org/docs/current/libpq-connect.html
  # https://postgrest.org/en/stable/configuration.html
  # https://postgrest.org/en/stable/tutorials/tut0.html
  # https://postgrest.org/en/stable/tutorials/tut1.html
  # http://0.0.0.0:5433/todos
  postgrest:
    image: postgrest/postgrest
    links:
      - postgresql:postgresql
    ports:
      - 5433:5433
    environment:
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:?error} # public
      PGRST_DB_EXTRA_SEARCH_PATH: ${PGRST_DB_EXTRA_SEARCH_PATH:?error} # public,extensions
      PGRST_DB_URI: postgres://${POSTGRES_USER:?error}:${POSTGRES_PASSWORD:?error}@postgresql:5432/postgres
      PGRST_SERVER_PORT: 5433
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET:?error} # crestfall
      PGRST_JWT_SECRET_IS_BASE64: ${PGRST_JWT_SECRET_IS_BASE64:?error} # true
      PGRST_JWT_AUD: crestfall
    depends_on:
      - postgresql

  # https://hub.docker.com/r/typesense/typesense
  # https://typesense.org/docs/0.23.1/api/server-configuration.html
  # https://typesense.org/docs/guide/docker-swarm-high-availability.html
  # http://localhost:8108/metrics.json?x-typesense-api-key=crestfall
  typesense:
    image: typesense/typesense:0.23.1
    ports:
      - 8108:8108
    environment:
      TYPESENSE_DATA_DIR: /var/lib/typesense/data
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY:?error} # crestfall
      TYPESENSE_API_PORT: 8108
      TYPESENSE_ENABLE_CORS: true
    depends_on:
      - postgresql
    volumes:
      - ./volumes/typesense/data:/var/lib/typesense/data